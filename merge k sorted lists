#include<stdio.h>
#include<stdlib.h>

struct listNode {
    int val;
    struct listNode *next;
}*new, *tail, *temp;

struct listNode* mergeTwoLists(struct listNode* list1,struct listNode* list2){
    struct listNode *temp,*l;
    if(list1==NULL || list2==NULL){
        if(list1==NULL){
            return(list2);
        }else if(list2==NULL){
            return(list1);
        }
    }
    if(list1->val<list2->val){
        l = list1;
        list1 = list1->next;
    }else{
        l = list2;
        list2 = list2->next;
    }
    temp = l;
    while(list1!=NULL && list2!=NULL){
        if(list1->val<list2->val){
            temp->next = list1;
            list1 = list1->next;
        }else{
            temp->next = list2;
            list2 = list2->next;
        }
        temp = temp->next;
    }
    if(list1==NULL){
        temp->next = list2;
    }else if(list2==NULL){
        temp->next = list1;
    }
    return(l);
}

struct listNode* mergeKLists(struct listNode** lists, int listsSize){
    struct listNode *head = tail,*temp;
    if(listsSize==0)
        return(NULL);
    else{
        temp = lists[0];
        for(int i=1;i<listsSize;i++)
            temp = mergeTwoLists(temp,lists[i]);
        return(temp);
    }
}

struct listNode* insert(){
    struct listNode* h = NULL;
    struct listNode* t = NULL;
    int n, v, i;
    printf("Enter no of values in list : ");
    scanf("%d", &n);
    printf("Enter values in sorted order\n");
    for(i=0; i<n; i++){
        new=(struct listNode*)malloc(sizeof(struct listNode));
        printf("Enter %d th value : ",i+1);
        scanf("%d",&v);
        new->val = v;
        new->next=NULL;
        if(i==0){
            h=new;
            t=new;
        }
        else{
            t->next=new;
            t=t->next;
        }
    }
    return h;
}

int main(){
    int listsSize;
    printf("Enter no of lists : ");
    scanf("%d",&listsSize);
    struct listNode* lists[listsSize];
    for(int i=0; i<listsSize; i++){
        printf("Enter %d list values\n",i+1);
        lists[i]=insert();
    }
    struct listNode *m = mergeKLists(lists, listsSize);
    printf("Final sorted list is :\n");
    while(m!=NULL){
        printf("%d ", m->val);
        m=m->next;
    }
}


